@model IEnumerable<mvctest.Models.RecordViewModel>

@{
    ViewData["Title"] = "Index";
}

<style>
    .wrap-column {
        width: 200px;
        white-space: normal;
        word-break: break-word;
    }

    .table-actions {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 0.5rem;
    }

    @@keyframes pulse {
        0%

    {
        transform: scale(1);
        box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.5);
    }

    70% {
        transform: scale(1.1);
        box-shadow: 0 0 0 10px rgba(255, 0, 0, 0);
    }

    100% {
        transform: scale(1);
        box-shadow: 0 0 0 0 rgba(255, 0, 0, 0);
    }

    }

    #voiceBtn.listening {
        animation: pulse 1.2s infinite;
        background-color: #f8d7da;
        color: red;
    }
</style>


<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-primary">Record List</h2>
        <a asp-action="Create" class="btn btn-success">Create New</a>
    </div>

    <!-- ✅ Moved Download Button INTO form -->
    <form asp-action="DownloadSelected" method="post">
        <div class="mt-3 text-end">
            <button type="submit" class="btn btn-primary">Download Selected</button>
        </div>
        <br />
        <div class="table-responsive">
            <table id="recordsTable" class="table table-striped table-hover table-bordered shadow-sm align-middle">
                <thead class="table-dark">
                    <tr>
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th class="wrap-column">@Html.DisplayNameFor(model => model.Title)</th>
                        <th class="wrap-column">@Html.DisplayNameFor(model => model.Container)</th>
                        <th>@Html.DisplayNameFor(model => model.IsContainer)</th>
                        <th>@Html.DisplayNameFor(model => model.Assignee)</th>
                        <th>@Html.DisplayNameFor(model => model.DateCreated)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.IsContainer != "Container")
                                {
                                    <input type="checkbox" name="selectedIds" value="@item.URI" />
                                }
                            </td>
                            <td class="wrap-column">@Html.DisplayFor(modelItem => item.Title)</td>
                            <td class="wrap-column">@Html.DisplayFor(modelItem => item.Container)</td>
                            <td>@Html.DisplayFor(modelItem => item.IsContainer)</td>
                            <td>@Html.DisplayFor(modelItem => item.Assignee)</td>
                            <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                            <td>
                                <div class="table-actions">
                                    <a asp-action="Details" asp-route-id="@item.URI" class="btn btn-sm btn-info text-white">Details</a>
                                    <a asp-action="Delete" asp-route-id="@item.URI" class="btn btn-sm btn-danger">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>

    @await Html.PartialAsync("_ChatBotPartial")
</div>

@section Scripts {
    <script>

        $(document).ready(function () {
            $('#recordsTable').DataTable({
            paging: true,
            pageLength: 10,
            ordering: false,
            searching: false,
            info: false,
            lengthChange: false,
            dom: "<'row'<'col-sm-12'tr>>" +    // Table
                 "<'row mt-2'<'col-sm-6 d-flex justify-content-start'p>>" // Pagination bottom left
        });



            // Select/Deselect All
            $('#selectAll').on('change', function () {
                $('input[name="selectedIds"]').each(function () {
                    this.checked = $('#selectAll').prop('checked');
                });
            });

            // Chatbot Logic
            $('#chatToggle').click(function () {
                $('#chatContainer').toggle();
            });

            $('#chatClose').click(function () {
                $('#chatContainer').hide();
            });

            $('#sendBtn').click(function () {
                sendMessage();
            });

            $('#userInput').keypress(function (e) {
                if (e.which === 13) {
                    sendMessage();
                }
            });

            function sendMessage() {
                var message = $('#userInput').val().trim();
                if (message === '') return;

                $('#chatWindow').append('<div class="chat-bubble chat-user">' + message + '</div>');

                $.ajax({
                    url: '@Url.Action("GetResponse", "ChatBot")',
                    type: 'POST',
                    data: { UserMessage: message },
                    success: function (data) {
                        $('#chatWindow').append('<div class="chat-bubble chat-bot">' + data.responseMessage + '</div>');
                        $('#chatWindow').scrollTop($('#chatWindow')[0].scrollHeight);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error:", error);
                    }
                });

                $('#userInput').val('');
            }
        });

        //-----------------------------VoiceRecognaization-------------------------------------
            $(document).ready(function () {
            // Check for browser support
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            let recognition;

            if (SpeechRecognition) {
                recognition = new SpeechRecognition();
                recognition.continuous = false;
                recognition.lang = 'en-US';
                recognition.interimResults = false;
                recognition.maxAlternatives = 1;

                // recognition.onstart = function () {
                //     $('#voiceBtn i').removeClass('fa-microphone').addClass('fa-microphone-slash').css('color', 'red');
                // };

                // recognition.onend = function () {
                //     $('#voiceBtn i').removeClass('fa-microphone-slash').addClass('fa-microphone').css('color', '');
                // };

                 recognition.onstart = function () {
                $('#voiceBtn')
                    .addClass('listening')
                    .find('i')
                    .removeClass('fa-microphone')
                    .addClass('fa-microphone-slash');
                 };

                recognition.onend = function () {
                    $('#voiceBtn')
                        .removeClass('listening')
                        .find('i')
                        .removeClass('fa-microphone-slash')
                        .addClass('fa-microphone');
                };

                recognition.onresult = function (event) {
                    const transcript = event.results[0][0].transcript;
                    $('#userInput').val(transcript);
                    $('#sendBtn').click(); // auto-send after voice
                };

                recognition.onerror = function (event) {
                    console.error("Voice recognition error:", event.error);
                    alert("Voice recognition error: " + event.error);
                };

                // Trigger recognition
                $('#voiceBtn').click(function (e) {
                    e.preventDefault();
                    recognition.start();
                });
            } else {
                $('#voiceBtn').hide();
                console.warn("Speech recognition not supported in this browser.");
            }
        });
        //-------------------------------------------------------------------------------------

        //-------------------------------------------------DeepSeek----------------------------

                $(document).ready(function () {
            // On model selection
            $('#aiModel').on('change', function () {
                const selectedModel = $(this).val();

                if (selectedModel === 'deepseek') {
                    const suggestions = [
                        "Do you want a summary of this record? Please Enter Record Name : ",
                        "Which record summary do you want to know? Please Enter Record Name : ",
                        "Show me the record summary for Record Name : "
                    ];

                    let suggestionHtml = '<div class="chat-bubble chat-bot">';
                    suggestionHtml += '<div><strong>Suggestions:</strong><ul style="padding-left: 15px;">';

                    suggestions.forEach(function (text) {
                        suggestionHtml += `<li class="suggestion" style="cursor: pointer; color: #007bff; text-decoration: underline;">${text}</li>`;
                    });

                    suggestionHtml += '</ul></div></div>';

                    $('#chatWindow').append(suggestionHtml);
                    $('#chatWindow').scrollTop($('#chatWindow')[0].scrollHeight);
                }
            });

            // When a suggestion is clicked
            $(document).on('click', '.suggestion', function () {
                const suggestionText = $(this).text();
                $('#userInput').val(suggestionText).focus();
            });
        });

        
        //-------------------------------------------------------------------------------------



    </script>
}
